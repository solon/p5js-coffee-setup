var customNoise, setup;

setup = function() {
  var ang, centerX, centerY, i, noiseval, rad, radVariance, radius, thisRadius, x, y;
  createCanvas(windowWidth, windowHeight);
  background(255, 255, 255);
  strokeWeight(2);
  radius = 100;
  centerX = 250;
  centerY = 250;
  noFill();
  stroke(0, 30, 2);
  ellipse(centerX, centerY, radius * 2, radius * 2);
  stroke(20, 50, 70);
  strokeWeight(3);
  noiseval = random(10);
  thisRadius = 0;
  rad = 0;
  radVariance = 0;
  fill(20, 50, 23, 50);
  beginShape();
  for (ang = i = 0; i <= 360; ang = ++i) {
    noiseval += 0.1;
    radVariance = 30 * customNoise(noiseval);
    rad = radians(ang);
    thisRadius = radius + radVariance;
    x = centerX + (thisRadius * cos(rad));
    y = centerY + (thisRadius * sin(rad));
    curveVertex(x, y);
  }
  endShape(CLOSE);
};

customNoise = function(value) {
  return pow(sin(value), 3);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVsbGlwc2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFRLFNBQUE7QUFDTixNQUFBO0VBQUEsWUFBQSxDQUFhLFdBQWIsRUFBMEIsWUFBMUI7RUFDQSxVQUFBLENBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQixHQUFyQjtFQUNBLFlBQUEsQ0FBYSxDQUFiO0VBRUEsTUFBQSxHQUFTO0VBQ1QsT0FBQSxHQUFVO0VBQ1YsT0FBQSxHQUFVO0VBQ1YsTUFBQSxDQUFBO0VBQ0EsTUFBQSxDQUFPLENBQVAsRUFBVSxFQUFWLEVBQWMsQ0FBZDtFQUNBLE9BQUEsQ0FBUSxPQUFSLEVBQWlCLE9BQWpCLEVBQTBCLE1BQUEsR0FBTyxDQUFqQyxFQUFvQyxNQUFBLEdBQU8sQ0FBM0M7RUFFQSxNQUFBLENBQU8sRUFBUCxFQUFXLEVBQVgsRUFBZSxFQUFmO0VBQ0EsWUFBQSxDQUFhLENBQWI7RUFFQSxRQUFBLEdBQVcsTUFBQSxDQUFPLEVBQVA7RUFDWCxVQUFBLEdBQWE7RUFDYixHQUFBLEdBQU07RUFDTixXQUFBLEdBQWM7RUFHZCxJQUFBLENBQUssRUFBTCxFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEVBQWhCO0VBQ0EsVUFBQSxDQUFBO0FBRUEsT0FBVyxnQ0FBWDtJQUNFLFFBQUEsSUFBWTtJQUNaLFdBQUEsR0FBYyxFQUFBLEdBQUssV0FBQSxDQUFZLFFBQVo7SUFDbkIsR0FBQSxHQUFNLE9BQUEsQ0FBUSxHQUFSO0lBQ04sVUFBQSxHQUFhLE1BQUEsR0FBUztJQUN0QixDQUFBLEdBQUksT0FBQSxHQUFVLENBQUMsVUFBQSxHQUFhLEdBQUEsQ0FBSSxHQUFKLENBQWQ7SUFDZCxDQUFBLEdBQUksT0FBQSxHQUFVLENBQUMsVUFBQSxHQUFhLEdBQUEsQ0FBSSxHQUFKLENBQWQ7SUFDZCxXQUFBLENBQVksQ0FBWixFQUFlLENBQWY7QUFQRjtFQVFBLFFBQUEsQ0FBUyxLQUFUO0FBaENNOztBQW9DUixXQUFBLEdBQWMsU0FBQyxLQUFEO1NBQ1osR0FBQSxDQUFJLEdBQUEsQ0FBSSxLQUFKLENBQUosRUFBZ0IsQ0FBaEI7QUFEWSIsImZpbGUiOiJlbGxpcHNlLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsic2V0dXAgPSAtPlxuICBjcmVhdGVDYW52YXMgd2luZG93V2lkdGgsIHdpbmRvd0hlaWdodFxuICBiYWNrZ3JvdW5kIDI1NSwgMjU1LCAyNTVcbiAgc3Ryb2tlV2VpZ2h0IDJcblxuICByYWRpdXMgPSAxMDA7XG4gIGNlbnRlclggPSAyNTA7XG4gIGNlbnRlclkgPSAyNTA7XG4gIG5vRmlsbCgpXG4gIHN0cm9rZSAwLCAzMCwgMlxuICBlbGxpcHNlIGNlbnRlclgsIGNlbnRlclksIHJhZGl1cyoyLCByYWRpdXMqMlxuXG4gIHN0cm9rZSAyMCwgNTAsIDcwXG4gIHN0cm9rZVdlaWdodCAzXG5cbiAgbm9pc2V2YWwgPSByYW5kb20oMTApXG4gIHRoaXNSYWRpdXMgPSAwXG4gIHJhZCA9IDBcbiAgcmFkVmFyaWFuY2UgPSAwXG5cblxuICBmaWxsIDIwLDUwLCAyMywgNTBcbiAgYmVnaW5TaGFwZSgpXG5cbiAgZm9yIGFuZyBpbiBbMC4uMzYwXVxuICAgIG5vaXNldmFsICs9IDAuMVxuICAgIHJhZFZhcmlhbmNlID0gMzAgKiBjdXN0b21Ob2lzZSBub2lzZXZhbFxuICAgIHJhZCA9IHJhZGlhbnMgYW5nXG4gICAgdGhpc1JhZGl1cyA9IHJhZGl1cyArIHJhZFZhcmlhbmNlXG4gICAgeCA9IGNlbnRlclggKyAodGhpc1JhZGl1cyAqIGNvcyByYWQpXG4gICAgeSA9IGNlbnRlclkgKyAodGhpc1JhZGl1cyAqIHNpbiByYWQpXG4gICAgY3VydmVWZXJ0ZXggeCwgeVxuICBlbmRTaGFwZShDTE9TRSlcblxuICByZXR1cm5cblxuY3VzdG9tTm9pc2UgPSAodmFsdWUpIC0+XG4gIHBvdyBzaW4odmFsdWUpLCAzIl19